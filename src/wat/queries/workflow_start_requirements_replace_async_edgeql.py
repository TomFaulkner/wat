# AUTOGENERATED FROM 'queries/workflow_start_requirements_replace.edgeql' WITH:
#     $ edgedb-py --target async


from __future__ import annotations

import dataclasses
import uuid

import edgedb
import pydantic


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class WorkflowStartRequirementsReplaceResult(NoPydanticValidation):
    id: uuid.UUID


async def workflow_start_requirements_replace(
    executor: edgedb.AsyncIOExecutor,
    *,
    id: uuid.UUID,
    state_ids: list[uuid.UUID],
) -> WorkflowStartRequirementsReplaceResult | None:
    return await executor.query_single(
        """\
        update Workflow
        filter .id = <uuid>$id
        set {
          start_requirements := (
            select detached StateAttributes
            filter .id in std::array_unpack(<array<uuid>>$state_ids)
          )
        }\
        """,
        id=id,
        state_ids=state_ids,
    )


class WorkflowStartRequirementsReplace(pydantic.BaseModel):
    id: uuid.UUID
    state_ids: list[uuid.UUID]
