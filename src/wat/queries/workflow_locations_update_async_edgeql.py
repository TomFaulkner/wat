# AUTOGENERATED FROM 'queries/workflow_locations_update.edgeql' WITH:
#     $ edgedb-py --target async


from __future__ import annotations

import dataclasses
import uuid

import edgedb
import pydantic


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class WorkflowLocationsUpdateResult(NoPydanticValidation):
    id: uuid.UUID


async def workflow_locations_update(
    executor: edgedb.AsyncIOExecutor,
    *,
    id: uuid.UUID,
    locations: str,
) -> WorkflowLocationsUpdateResult | None:
    return await executor.query_single(
        """\
        update Workflow
        filter .id = <uuid>$id
        set {
          locations := <json>$locations
        }\
        """,
        id=id,
        locations=locations,
    )


class WorkflowLocationsUpdate(pydantic.BaseModel):
    id: uuid.UUID
    locations: str
