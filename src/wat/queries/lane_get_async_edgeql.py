# AUTOGENERATED FROM 'queries/lane_get.edgeql' WITH:
#     $ edgedb-py --target async


from __future__ import annotations

import dataclasses
import uuid

import edgedb
import pydantic


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class LaneGetResultKey(NoPydanticValidation):
    id: uuid.UUID
    key: str


@dataclasses.dataclass
class LaneGetResult(NoPydanticValidation):
    id: uuid.UUID
    system: str
    system_identifier: str
    key: LaneGetResultKey


async def lane_get(
    executor: edgedb.AsyncIOExecutor,
    *,
    system: str,
    system_identifier: str,
) -> list[LaneGetResult]:
    return await executor.query(
        """\
        select Lane {
          system, system_identifier, key :{ key }
        }
        filter .system = <str>$system and .system_identifier = <str>$system_identifier;\
        """,
        system=system,
        system_identifier=system_identifier,
    )


class LaneGet(pydantic.BaseModel):
    system: str
    system_identifier: str
